language: generic
os:
- osx
- linux
env:
  matrix:
  - PYTHON="3.6"
  - PYTHON="3.7"
  - PYTHON="3.8"
  global:
  - CONDA_PREFIX=$HOME/miniconda
sudo: false
before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    OS="MacOSX-x86_64"
  else
    OS="Linux-x86_64"
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > $HOME/miniconda.sh
  else
    curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh > $HOME/miniconda.sh
  fi
- bash $HOME/miniconda.sh -b -p $(pwd)/anaconda
- export PATH="$(pwd)/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda config --add channels conda-forge
- conda create -n _testing python=$PYTHON
- source activate _testing
- conda info -a && conda list
install:
- conda install -q --file=requirements-library.txt
- pip install -e .
script:
- conda install -q --file=requirements-testing.txt
- python -c 'import pymt_{{ cookiecutter.plugin_name }}'
{%- for babelized_class in cookiecutter.components %}
- bmi-test pymt_{{ cookiecutter.plugin_name }}.bmi:{{ babelized_class }} -vvv
{%- endfor %}

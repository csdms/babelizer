{{"{%"}} set data = load_setup_py_data() {{"%}"}}

package:
  name: "pymt_{{cookiecutter.package_name}}"
  version: {{"{{"}} data.get('version') {{"}}"}}

source:
  path: ..

build:
  number: 0
  script: "{{"{{"}} PYTHON {{"}}"}} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"

requirements:
  build:
    - {{"{{"}} compiler('c') {{"}}"}}
    {%- if cookiecutter.language == 'fortran' %}
    - {{"{{"}} compiler('fortran') {{"}}"}}
    {%- endif %}
  host:
    - python
    - pip
    - cython
    - numpy 1.11.*
    - model_metadata
    {%- if cookiecutter.package_requirements -%}
    {%- for requirement in cookiecutter.package_requirements.split(',') %}
    - {{ requirement|trim }} {% endfor %}
    {%- endif %}
  run:
    - python
    - {{"{{"}} pin_compatible('numpy') {{"}}"}}
    {%- if cookiecutter.package_requirements -%}
    {%- for requirement in cookiecutter.package_requirements.split(',') %}
    - {{ requirement|trim }} {% endfor %}
    {%- endif %}

test:
  requires:
    - bmi-tester
    - model_metadata
  imports:
    - pymt_{{cookiecutter.package_name}}
  commands:
{%- for babelized_class in cookiecutter.components %}
    - config_file=$(mmd-stage {{ babelized_class }} . > MANIFEST && mmd-query {{ babelized_class }} --var=run.config_file.path)
    - bmi-test pymt_{{ cookiecutter.package_name }}.bmi:{{ babelized_class }} --config-file=$config_file --manifest=MANIFEST -v
{%- endfor %}

about:
  summary: Python package that wraps the {{cookiecutter.package_name}} BMI.
  home: https://github.com/{{cookiecutter.github_username}}/pymt_{{cookiecutter.package_name}}
  license: {{cookiecutter.open_source_license}}
  license_file: LICENSE
  dev_url: https://github.com/{{cookiecutter.github_username}}/pymt_{{cookiecutter.package_name}}

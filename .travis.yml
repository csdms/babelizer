language: generic
os:
- linux
- osx
env:
  matrix:
  - PYTHON="3.8"
sudo: false

jobs:
  include:
  - stage: lint
    os: linux
    script:
    - pip install flake8
    - make lint

  - stage: docs
    os: linux
    install:
    - pip install -r requirements-docs.txt
    - pip install -e .
    script:
    - make -C docs clean html

before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl -L https://micromamba.snakepit.net/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
  else
    curl -L https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
  fi
- ./bin/micromamba shell init -s bash -p ~/micromamba
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    source $HOME/.bash_profile
  else
    source $HOME/.bashrc
  fi
- micromamba activate
- micromamba install python=$PYTHON pip mamba --yes -c conda-forge
- mamba install bmi-c bmi-fortran cmake pkg-config fortran-compiler --yes -c conda-forge
- |
  mkdir _buildc \
  && pushd _buildc \
  &&   cmake ../external/bmi-example-c -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
  &&   make install \
  &&   popd
- |
  mkdir _buildf \
  && pushd _buildf \
  &&   cmake ../external/bmi-example-fortran -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
  &&   make install \
  &&   popd
install:
- mamba install --file=requirements-testing.txt --yes -c conda-forge
- pip install .
script:
- babelize --version
- babelize --help
- babelize init --help
- babelize update --help
- babelize generate --help
- babelize generate - --no-input
- python -c 'import babelizer; print(babelizer.__version__)'
- pytest -vvv
